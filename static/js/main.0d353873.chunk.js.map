{"version":3,"sources":["logo.svg","components/Map/index.js","modules/Period.js","components/StackChart/index.js","components/StackChartLegend/index.js","components/CountryInfo/index.js","App.js","reportWebVitals.js","index.js"],"names":["Map","this","updateChart","prevProps","props","width","height","ready","countriesData","profits","profitsById","forEach","d","id","default","features","g","svg","append","attr","selectAll","data","enter","on","event","item","stopPropagation","onSelectedCountryIdChange","path","style","color","d3","zoom","scaleExtent","transform","k","call","datum","topojson","a","b","margin","top","right","bottom","left","domain","range","viz","projection","scale","translate","worldCountries","node","ref","React","Component","defaultProps","animDuration","Period","year","periodScope","periodType","_stringRepr","_year","_periodScope","_periodType","fromStringRepr","stringRepr","split","formatPeriod","toString","barStack","seriesData","length","l","posBase","negBase","size","Math","abs","y","y0","extent","map","e","f","StackChart","scaleHeight","scaleWidth","padding","stackData","updateScales","series","exit","transition","duration","remove","classed","Object","i","x","bandwidth","tooltip","value","xPosition","yPosition","select","text","round","xAxis","tickFormat","yAxis","tickSize","dividingLine","drawLine","drawTooltip","lineData","line","StackChartLegend","legendMap","className","keys","legendKey","type","background","title","PROFITS_BREAKDOWN_UI_DATA","dividendsAndBuybacks","netDebtOfHouseholdsAndNISH","netDebtOfGeneralGovernment","fixedAssetsOfDomesticBusiness","currentAccount","otherFactors","discrepancies","CountryInfo","countryId","useState","countryProfitsData","worldProfits","prop","countryProfitData","period","getProfitsBreakdownData","profitsBreakdownData","getProfitsData","profitsData","countryInfo","find","properties","name","getCountryName","countryName","setHeight","setWidth","useRef","useEffect","current","clientHeight","clientWidth","App","selectedCountryId","setSelectedCountryId","profitsList","countiesProfits","open","Boolean","onClose","center","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d353873.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nimport * as worldCountries from './data/world_countries.json';\n\nclass Map extends React.Component {\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.width !== prevProps.width || this.props.height !== prevProps.height) {\n      this.updateChart();\n    }\n  }\n\n  async updateChart() {\n    if (this.props.width === 0 || this.props.height === 0) {\n      return;\n    }\n    const { data, onSelectedCountryIdChange } = this.props;\n\n    const format = d3.format(',');\n\n    const margin = {top: 0, right: 0, bottom: 0, left: 0};\n    const width = this.props.width - margin.left - margin.right;\n    const height = this.props.height - margin.top - margin.bottom;\n\n    const color = d3.scaleThreshold()\n      .domain([\n        0,\n        50,\n        100,\n        150,\n        200,\n        250,\n        300,\n        350,\n        400,\n        450\n      ])\n      .range([\n        'rgb(158,202,225)',\n        'rgb(107,174,214)',\n        'rgb(88,140,206)',\n        'rgb(66,146,198)',\n        'rgb(33,113,181)',\n        'rgb(15,91,171)',\n        'rgb(8,81,156)',\n        'rgb(8,48,107)',\n        'rgb(3,19,43)',\n        'rgb(3,19,43)'\n      ]);\n\n    const svg = d3.select(this.viz)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('class', 'map');\n\n    const projection = d3.geoMercator()\n      .scale(150)\n      .translate( [width / 2, height / 1.5]);\n\n    const path = d3.geoPath().projection(projection);\n    ready(worldCountries, data)\n\n    function ready(countriesData, profits) {\n      const profitsById = {};\n      profits.forEach(d => {\n        profitsById[d.id] = +d.profits;\n      });\n      countriesData.default.features.forEach(d => {\n        d.profits = profitsById[d.id]\n      });\n\n      function clicked(event, data, item) {\n        event.stopPropagation();\n        onSelectedCountryIdChange(data.id);\n      }\n\n      const g = svg.append(\"g\");\n\n      g.append('g')\n        .attr('class', 'countries')\n        .selectAll('path')\n        .data(countriesData.default.features)\n        .enter().append('path')\n        .on(\"click\", clicked)\n        .attr('d', path)\n        .style('fill', d => color(profitsById[d.id]))\n        .style('stroke', 'white')\n        .style('opacity', 0.8)\n        .style('stroke-width', 0.3)\n        .on('mouseover', function (d) {\n          d3.select(this)\n            .style('opacity', 1)\n            .style('stroke-width', 1);\n        })\n        .on('mouseout', function (d) {\n          d3.select(this)\n            .style('opacity', 0.8)\n            .style('stroke-width', 0.3);\n        });\n\n      const zoom = d3.zoom()\n        .scaleExtent([1, 8])\n        .on(\"zoom\", zoomed);\n\n      function zoomed(event) {\n        const {transform} = event;\n        g.attr(\"transform\", transform);\n        g.attr(\"stroke-width\", 1 / transform.k);\n      }\n\n      svg.call(zoom);\n\n      svg.append('path')\n        .datum(topojson.mesh(countriesData.default, (a, b) => a.id !== b.id))\n        .attr('class', 'names')\n        .attr('d', path);\n    }\n\n    return svg.node()\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <svg ref={ viz => (this.viz = viz) }\n           width={width} height={height} >\n      </svg>\n    );\n  }\n}\n\nMap.defaultProps = {\n  animDuration: 600\n};\n\nMap.propTypes = {\n  animDuration: PropTypes.number,\n  data: PropTypes.array.isRequired,\n  onSelectedCountryIdChange: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\n\nexport default Map;","import lodash from 'lodash';\n\nclass Period {\n  static fromStringRepr = (stringRepr) => {\n    const [year, periodScope] = stringRepr.split('-');\n    const periodType = periodScope.split('')[0];\n\n    return new Period(year, periodScope, periodType);\n  }\n\n  constructor (year, periodScope, periodType) {\n    this._stringRepr = `${year}-${periodScope}`;\n    this._year = year;\n    this._periodScope = periodScope;\n    this._periodType = periodType === 'Y'\n      ? 'Year'\n      : periodType;\n  }\n\n  get year () {\n    return this._year;\n  }\n\n  get stringRepr () {\n    return this._stringRepr;\n  }\n\n  get periodScope () {\n    return this._periodScope;\n  }\n\n  get periodType () {\n    return this._periodType;\n  }\n\n  toString () {\n    if (this._periodType === 'Year') {\n      return this._year;\n    }\n    return `${this._year} ${this._periodScope}`\n  }\n}\n\nexport default Period;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Period from \"../../modules/Period\";\nimport * as d3 from \"d3\";\nimport './styles.css';\n\nconst formatFloat = (value) => {\n  if (value) {\n    return Math.round(value*100)/100;\n  }\n  return value\n};\n\nconst formatPeriod = (stringRepr) => {\n  if (stringRepr) {\n    return Period.fromStringRepr(stringRepr).toString()\n  }\n  return stringRepr;\n};\n\nconst barStack = (seriesData) => {\n  if (seriesData.length === 0) {\n    return [];\n  }\n  var l = seriesData[0].length\n  while (l--) {\n    var posBase = 0; // positive base\n    var negBase = 0; // negative base\n\n    seriesData.forEach(function(d) {\n      d = d[l]\n      d.size = Math.abs(d.y)\n      if (d.y < 0) {\n        d.y0 = negBase\n        negBase -= d.size\n      } else\n      {\n        d.y0 = posBase = posBase + d.size\n      }\n    })\n  }\n  seriesData.extent = d3.extent(\n    d3.merge(\n      d3.merge(\n        seriesData.map(function(e) {\n          return e.map(function(f) { return [f.y0,f.y0-f.size] })\n        })\n      )\n    )\n  )\n}\n\nclass StackChart extends React.Component {\n  scaleHeight = d3.scaleLinear();\n  scaleWidth = d3.scaleBand().padding(0.1);\n\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  componentDidUpdate() {\n    this.updateChart();\n  }\n\n  updateChart() {\n    const { stackData, width, height, animDuration, margin} = this.props;\n    if (width ===0 || height === 0 || stackData.length === 0) {\n      return;\n    }\n    this.updateScales();\n\n    const svg = d3.select(this.viz);\n\n    barStack(stackData);\n    const series = svg\n      .selectAll(\".series\")\n      .data(stackData);\n\n    series.exit()\n      .transition().duration(animDuration)\n      .attr(\"y\", height)\n      .attr(\"height\", 0)\n      .style(\"fill-opacity\", 0)\n      .remove();\n\n    series.enter()\n      .append(\"g\")\n      .classed(\"series\",true)\n      .style(\"fill\", (d) => d[0].color)\n      .selectAll(\"rect\").data(Object)\n      .enter().append(\"rect\")\n      .attr(\"x\", (d, i) => this.scaleWidth(d.x))\n      .attr(\"y\", (d) => this.scaleHeight(d.y0))\n      .attr(\"height\", (d) => (this.scaleHeight(0) - this.scaleHeight(d.size)))\n      .attr(\"width\", this.scaleWidth.bandwidth())\n      .on(\"mouseover\", function() { tooltip.style(\"display\", null); })\n      .on(\"mouseout\", function() { tooltip.style(\"display\", \"none\"); })\n      .on(\"mousemove\", function(event, d) {\n        const xPosition = d3.pointer(event)[0] - 55;\n        const yPosition = d3.pointer(event)[1] - 5;\n        tooltip.attr(\"transform\", \"translate(\" + xPosition + \",\" + yPosition + \")\");\n        tooltip.select(\"text\").text(formatFloat(d.y));\n      });\n\n    var xAxis = d3.axisBottom()\n      .scale(this.scaleWidth)\n      .tickFormat(formatPeriod);\n\n    var yAxis = d3.axisLeft()\n      .scale(this.scaleHeight)\n      .tickSize(6, 0);\n\n    svg.append(\"g\").attr(\"class\",\"axis x\").attr(\"transform\",\"translate (0 \"+(height - margin)+\")\").call(xAxis)\n    svg.append(\"g\").attr(\"class\",\"axis y\").attr(\"transform\",\"translate (\"+margin+\" 0)\").call(yAxis)\n    const dividingLine = d3.line();\n    svg.append(\"path\").attr(\"class\",\"barChart_dividingLine\").attr(\"d\", dividingLine(\n      [\n        [margin+1, this.scaleHeight(0)],\n        [width, this.scaleHeight(0)]\n      ]\n    ))\n\n    this.drawLine(svg);\n    const tooltip = this.drawTooltip(svg)\n  }\n\n  drawLine (svg) {\n    const {lineData} = this.props;\n    const line = d3.line()\n      .x((d) => this.scaleWidth(d.x) + this.scaleWidth.bandwidth()/2)\n      .y((d) => this.scaleHeight(d.y));\n\n    svg.append(\"path\")\n      .datum(lineData)\n      .attr(\"class\", \"barChart_line\")\n      .attr(\"d\", line);\n  }\n\n  drawTooltip (svg) {\n    const tooltip = svg.append(\"g\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"display\", \"none\");\n\n    tooltip.append(\"rect\")\n      .attr(\"width\", 50)\n      .attr(\"height\", 20)\n      .attr(\"fill\", \"white\")\n      .style(\"opacity\", 0.5);\n\n    tooltip.append(\"text\")\n      .attr(\"x\", 25)\n      .attr(\"dy\", \"1.2em\")\n      .style(\"text-anchor\", \"middle\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-weight\", \"bold\");\n\n    return tooltip;\n  }\n\n  updateScales() {\n    const { stackData, width, height, margin } = this.props;\n    if (stackData.length === 0) {\n      return;\n    }\n    this.scaleWidth\n      .domain(stackData[0].map((d) => d.x))\n      .range([margin, width - margin]);\n\n    barStack(stackData);\n    this.scaleHeight\n      .domain(stackData.extent)\n      .range([ height - margin,0 + margin]);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <svg ref={ viz => (this.viz = viz) }\n           width={width} height={height} >\n      </svg>\n    );\n  }\n}\n\nStackChart.propTypes = {\n  animDuration: PropTypes.number,\n  margin: PropTypes.number,\n  lineData: PropTypes.array.isRequired,\n  height: PropTypes.number.isRequired,\n  stackData: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired\n};\n\nStackChart.defaultProps = {\n  animDuration: 600,\n  margin: 0\n};\n\nexport default StackChart;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport './styles.css';\n\nconst StackChartLegend = ({\n  legendMap\n}) => {\n  return (<div className='stackChartLegend'>\n    {\n      Object.keys(legendMap).map((legendKey) => (\n        <div className='stackChartLegend_item'>\n          <div className={`stackChartLegend_${legendMap[legendKey].type}`} style={{background: legendMap[legendKey].color}}></div>\n          <div className='stackChartLegend_title'>{legendMap[legendKey].title}</div>\n        </div>\n      ))\n    }\n  </div>)\n};\n\nStackChartLegend.propTypes = {\n  legendMap: PropTypes.shape({}).isRequired\n};\n\n\nexport default StackChartLegend;","import React, { useState, useEffect, useRef } from 'react';\nimport * as worldProfits from './data/worldProfits.json';\nimport * as worldCountries from '../Map/data/world_countries.json';\nimport StackChart from '../StackChart';\nimport StackChartLegend from '../StackChartLegend';\nimport * as d3 from \"d3\";\nimport './styles.css';\n\nconst PROFITS_BREAKDOWN_UI_DATA = {\n  dividendsAndBuybacks: {\n    title: 'Dividends and Buybacks',\n    type: 'stack',\n    color: '#0C3B4E'\n  },\n  netDebtOfHouseholdsAndNISH: {\n    title: 'Δ Net debt of Households and NISH',\n    type: 'stack',\n    color: '#D02428'\n  },\n  netDebtOfGeneralGovernment: {\n    title: 'Δ Net debt of General Government',\n    type: 'stack',\n    color: '#176C76'\n  },\n  fixedAssetsOfDomesticBusiness: {\n    title: 'Δ Fixed Assets of Domestic Business',\n    type: 'stack',\n    color: '#3EA45E'\n  },\n  currentAccount: {\n    title: 'Current Account',\n    type: 'stack',\n    color: '#5F7658'\n  },\n  otherFactors: {\n    title: 'Other factors',\n    type: 'stack',\n    color: '#FEBD46'\n  },\n  discrepancies: {\n    title: 'Discrepancies',\n    type: 'stack',\n    color: '#B1B1B1'\n  },\n  profits: {\n    title: 'Profit After Taxes [CP_D]',\n    type: 'line',\n    color: '#000000'\n  }\n};\n\nconst getProfitsBreakdownData = (countryId) => {\n  const countryProfitsData = worldProfits.default[countryId];\n\n  return countryProfitsData\n    ? [\n      'dividendsAndBuybacks',\n      'netDebtOfHouseholdsAndNISH',\n      'netDebtOfGeneralGovernment',\n      'fixedAssetsOfDomesticBusiness',\n      'currentAccount',\n      'otherFactors',\n      'discrepancies'\n    ].map((prop) => countryProfitsData.map((countryProfitData) => ({x: countryProfitData.period, y: countryProfitData.data[prop], color: PROFITS_BREAKDOWN_UI_DATA[prop].color})))\n    : [];\n};\nconst getProfitsData = (countryId) => {\n  const countryProfitsData = worldProfits.default[countryId];\n\n  return countryProfitsData\n    ? countryProfitsData.map((countryProfitData) => ({x: countryProfitData.period, y: countryProfitData.data.profits}))\n    : [];\n};\n\nconst getCountryName = (countryId) => {\n  const countryInfo = worldCountries.default.features.find((item) => item.id === countryId);\n  return countryInfo\n    ? countryInfo.properties.name\n    : null;\n}\n\nexport const CountryInfo = ({\n  countryId\n}) => {\n  const [profitsBreakdownData, setProfitsBreakdownData] = useState(getProfitsBreakdownData(countryId));\n  const [profitsData, setProfitsData] = useState(getProfitsData(countryId));\n  const [countryName, setCountryName] = useState(getCountryName(countryId));\n  const [height, setHeight] = useState(0)\n  const [width, setWidth] = useState(0)\n  const ref = useRef(null)\n\n  useEffect(() => {\n    setHeight(ref.current.clientHeight)\n    setWidth(ref.current.clientWidth)\n  }, [countryId])\n\n  return (\n    <div className=\"countryInfo\">\n      <div className='countryInfo_title'>\n        {countryName}\n      </div>\n      <div className='countryInfo_subtitle'>\n        {'Profits after Taxes, $bln/year'}\n      </div>\n      <div className='countryInfo_chart'>\n        <div\n          className='countryInfoChart_canvas'\n          ref={ref}\n        >\n          <StackChart\n            lineData={profitsData}\n            margin={40}\n            height={height}\n            stackData={profitsBreakdownData}\n            width={width}\n          />\n        </div>\n        {profitsBreakdownData.length && (\n          <div className='countryInfo_legend'>\n            <StackChartLegend\n              legendMap={PROFITS_BREAKDOWN_UI_DATA}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n)};\n","import React, { useState, useEffect, useRef } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Map from './components/Map';\nimport {CountryInfo} from './components/CountryInfo';\nimport * as worldProfits from './components/CountryInfo/data/worldProfits.json';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\n\nconst getCountriesProfitsData = () =>\n  Object.keys(worldProfits.default).map((countryId) => {\n    const profitsList = worldProfits.default[countryId];\n    return ({\n      id: countryId,\n      profits: profitsList[profitsList.length - 1].data.profits\n    })\n});\n\nfunction App() {\n  const [selectedCountryId, setSelectedCountryId] = useState(null);\n  const [countiesProfits] = useState(getCountriesProfitsData());\n  const [height, setHeight] = useState(0)\n  const [width, setWidth] = useState(0)\n  const ref = useRef(null)\n\n  useEffect(() => {\n    setHeight(ref.current.clientHeight)\n    setWidth(ref.current.clientWidth)\n  }, [])\n\n  return (\n    <div className=\"worldProfits\">\n      <div className=\"worldProfits_title\">{'Profits Atlas'}</div>\n      <div\n        className=\"worldProfits_wrapper\"\n        ref={ref}\n      >\n        <Map\n          data={countiesProfits}\n          height={height}\n          onSelectedCountryIdChange={setSelectedCountryId}\n          width={width}\n        />\n      </div>\n      <Modal open={Boolean(selectedCountryId)} onClose={() => setSelectedCountryId(null)} center>\n        <CountryInfo\n          countryId={selectedCountryId}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}