{"version":3,"sources":["logo.svg","components/BarChart/index.js","components/Map/index.js","components/CountryInfo/index.js","App.js","reportWebVitals.js","index.js"],"names":["barStack","seriesData","length","l","posBase","negBase","forEach","d","size","Math","abs","y","y0","extent","d3","map","e","f","BarChart","scaleColor","scaleHeight","scaleWidth","padding","this","updateChart","props","data","width","height","animDuration","margin","updateScales","svg","viz","series","selectAll","exit","transition","duration","attr","style","remove","enter","append","classed","i","Object","bandwidth","xAxis","scale","yAxis","tickSize","call","domain","range","ref","React","Component","defaultProps","Map","ready","countriesData","profits","profitsById","id","default","features","g","on","event","item","stopPropagation","onSelectedCountryIdChange","path","color","zoom","scaleExtent","transform","k","datum","topojson","a","b","top","right","bottom","left","projection","translate","worldCountries","node","count","CountryInfo","countryId","useState","countryProfits","worldProfits","prop","countryProfit","getCountryProfitData","countryProfitData","countryInfo","find","properties","name","getCountryName","countryName","setHeight","setWidth","useRef","useEffect","current","clientHeight","clientWidth","className","App","selectedCountryId","setSelectedCountryId","keys","profitsList","countiesData","open","Boolean","onClose","center","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a414444.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\n\nconst barStack = (seriesData) => {\n  if (seriesData.length === 0) {\n    return [];\n  }\n  var l = seriesData[0].length\n  while (l--) {\n    var posBase = 0; // positive base\n    var negBase = 0; // negative base\n\n    seriesData.forEach(function(d) {\n      d = d[l]\n      d.size = Math.abs(d.y)\n      if (d.y < 0) {\n        d.y0 = negBase\n        negBase -= d.size\n      } else\n      {\n        d.y0 = posBase = posBase + d.size\n      }\n    })\n  }\n  seriesData.extent = d3.extent(\n    d3.merge(\n      d3.merge(\n        seriesData.map(function(e) {\n          return e.map(function(f) { return [f.y0,f.y0-f.size] })\n        })\n      )\n    )\n  )\n}\n\nclass BarChart extends React.Component {\n\n  scaleColor = d3.scaleSequential(d3.interpolateViridis);\n  scaleHeight = d3.scaleLinear();\n  scaleWidth = d3.scaleBand().padding(0.1);\n\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  componentDidUpdate() {\n    this.updateChart();\n  }\n\n  updateChart() {\n    const { data, width, height, animDuration, margin} = this.props;\n    if (width ===0 || height === 0 || data.length === 0) {\n      return;\n    }\n    this.updateScales();\n\n    const svg = d3.select(this.viz);\n\n    const seriesData = barStack(data);\n    const series = svg\n      .selectAll(\".series\")\n      .data(data);\n\n    series.exit()\n      .transition().duration(animDuration)\n      .attr(\"y\", height)\n      .attr(\"height\", 0)\n      .style(\"fill-opacity\", 0)\n      .remove();\n\n    series.enter()\n      .append(\"g\")\n      .classed(\"series\",true)\n      .style(\"fill\", (d,i) => { return this.scaleColor(i) })\n      .selectAll(\"rect\").data(Object)\n      .enter().append(\"rect\")\n      .attr(\"x\", (d, i) => ( this.scaleWidth(i)))\n      .attr(\"y\", (d) => ( this.scaleHeight(d.y0) ))\n      .attr(\"height\", (d) => (this.scaleHeight(0) - this.scaleHeight(d.size)))\n      .attr(\"width\", this.scaleWidth.bandwidth());\n\n    var xAxis = d3.axisBottom()\n      .scale(this.scaleWidth);\n\n    var yAxis = d3.axisLeft()\n      .scale(this.scaleHeight)\n      .tickSize(6, 0);\n\n    svg.append(\"g\").attr(\"class\",\"axis x\").attr(\"transform\",\"translate (0 \"+this.scaleHeight(0)+\")\").call(xAxis)\n    svg.append(\"g\").attr(\"class\",\"axis y\").attr(\"transform\",\"translate (\"+margin+\" 0)\").call(yAxis)\n  }\n\n  updateScales() {\n    const { data, width, height, margin } = this.props;\n    this.scaleColor.domain([0, data.length]);\n    if (data.length === 0) {\n      return;\n    }\n    this.scaleWidth\n      .domain(data[0].map((d, i) => i))\n      .range([margin, width - margin]);\n\n    barStack(data);\n    this.scaleHeight\n      .domain(data.extent)\n      .range([ height - margin,0 + margin]);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <svg ref={ viz => (this.viz = viz) }\n           width={width} height={height} >\n      </svg>\n    );\n  }\n}\n\nBarChart.defaultProps = {\n  animDuration: 600\n};\n\nBarChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  margin: PropTypes.number,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  animDuration: PropTypes.number\n};\n\nBarChart.defaultProps = {margin: 0};\n\nexport default BarChart;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nimport * as worldCountries from './data/world_countries.json';\n\nclass Map extends React.Component {\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  async updateChart() {\n    //this.updateScales();\n    const { data, onSelectedCountryIdChange } = this.props;\n\n    const format = d3.format(',');\n\n    const margin = {top: 0, right: 0, bottom: 0, left: 0};\n    const width = 1000 - margin.left - margin.right;\n    const height = 700 - margin.top - margin.bottom;\n\n    const color = d3.scaleThreshold()\n      .domain([\n        0,\n        50,\n        100,\n        150,\n        200,\n        250,\n        300,\n        350,\n        400,\n        450\n      ])\n      .range([\n        'rgb(247,251,255)',\n        'rgb(222,235,247)',\n        'rgb(198,219,239)',\n        'rgb(158,202,225)',\n        'rgb(107,174,214)',\n        'rgb(66,146,198)',\n        'rgb(33,113,181)',\n        'rgb(8,81,156)',\n        'rgb(8,48,107)',\n        'rgb(3,19,43)'\n      ]);\n\n    const svg = d3.select(this.viz)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('class', 'map');\n\n    const projection = d3.geoMercator()\n      .scale(150)\n      .translate( [width / 2, height / 1.5]);\n\n    const path = d3.geoPath().projection(projection);\n    ready(worldCountries, data)\n\n    function ready(countriesData, profits) {\n      const profitsById = {};\n      profits.forEach(d => {\n        profitsById[d.id] = +d.profits;\n      });\n      countriesData.default.features.forEach(d => {\n        d.profits = profitsById[d.id]\n      });\n\n      function clicked(event, data, item) {\n        event.stopPropagation();\n        onSelectedCountryIdChange(data.id);\n      }\n\n      const g = svg.append(\"g\");\n\n      g.append('g')\n        .attr('class', 'countries')\n        .selectAll('path')\n        .data(countriesData.default.features)\n        .enter().append('path')\n        .on(\"click\", clicked)\n        .attr('d', path)\n        .style('fill', d => color(profitsById[d.id]))\n        .style('stroke', 'white')\n        .style('opacity', 0.8)\n        .style('stroke-width', 0.3)\n        .on('mouseover', function (d) {\n          d3.select(this)\n            .style('opacity', 1)\n            .style('stroke-width', 1);\n        })\n        .on('mouseout', function (d) {\n          d3.select(this)\n            .style('opacity', 0.8)\n            .style('stroke-width', 0.3);\n        });\n\n      const zoom = d3.zoom()\n        .scaleExtent([1, 8])\n        .on(\"zoom\", zoomed);\n\n      function zoomed(event) {\n        const {transform} = event;\n        g.attr(\"transform\", transform);\n        g.attr(\"stroke-width\", 1 / transform.k);\n      }\n\n      svg.call(zoom);\n\n      svg.append('path')\n        .datum(topojson.mesh(countriesData.default, (a, b) => a.id !== b.id))\n        .attr('class', 'names')\n        .attr('d', path);\n    }\n\n    return svg.node()\n  }\n\n  updateScales() {\n    const { data, width, height } = this.props;\n    this.scaleColor.domain([0, data.length]);\n    this.scaleWidth\n      .domain(data.map((d) => (d.item)))\n      .range([0, width]);\n    this.scaleHeight\n      .domain(d3.extent(data, (d) => (d.count)))\n      .range([height - 20, 0]);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <svg ref={ viz => (this.viz = viz) }\n           width={width} height={height} >\n      </svg>\n    );\n  }\n}\n\nMap.defaultProps = {\n  animDuration: 600\n};\n\nMap.propTypes = {\n  animDuration: PropTypes.number,\n  data: PropTypes.array.isRequired,\n  onSelectedCountryIdChange: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\n\nexport default Map;","import React, { useState, useEffect, useRef } from 'react';\nimport * as worldProfits from './data/worldProfits.json';\nimport * as worldCountries from '../Map/data/world_countries.json';\nimport StackChart from '../BarChart';\nimport './styles.css';\n\nconst getCountryProfitData = (countryId) => {\n  const countryProfits = worldProfits.default[countryId];\n\n  return countryProfits\n    ? [\n      'profits',\n      'dividendsAndBuybacks',\n      'netDebtOfHouseholdsAndNISH',\n      'netDebtOfGeneralGovernment',\n      'fixedAssetsofDomesticBusiness',\n      'currentAmount',\n      'otherFactors',\n      'discrepancies'\n    ].map((prop) => countryProfits.map((countryProfit) => ({y: countryProfit[prop]})))\n    : [];\n};\nconst getCountryName = (countryId) => {\n  const countryInfo = worldCountries.default.features.find((item) => item.id === countryId);\n  return countryInfo\n    ? countryInfo.properties.name\n    : null;\n}\n\nexport const CountryInfo = ({\n  countryId\n}) => {\n  const [countryProfitData, setcountryProfitData] = useState(getCountryProfitData(countryId));\n  const [countryName, setCountryName] = useState(getCountryName(countryId));\n  const [height, setHeight] = useState(0)\n  const [width, setWidth] = useState(0)\n  const ref = useRef(null)\n\n  useEffect(() => {\n    setHeight(ref.current.clientHeight)\n    setWidth(ref.current.clientWidth)\n  }, [countryId])\n\n  return (\n    <div className=\"countryInfo\">\n      <div className='countryInfo_header'>\n        {countryName}\n      </div>\n      <div\n        className='countryInfo_chart'\n        ref={ref}\n      >\n        <StackChart\n          data={countryProfitData}\n          width={width}\n          height={height}\n          margin={30}\n        />\n      </div>\n    </div>\n)};\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './components/BarChart';\nimport BarChart from './components/BarChart';\nimport Map from './components/Map';\nimport {CountryInfo} from './components/CountryInfo';\nimport * as worldProfits from './components/CountryInfo/data/worldProfits.json';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\n\nconst getCountriesData = () =>\n  Object.keys(worldProfits.default).map((countryId) => {\n    const profitsList = worldProfits.default[countryId];\n    return ({\n      id: countryId,\n      profits: profitsList[profitsList.length - 1].profits\n    })\n});\n\nfunction App() {\n  const [selectedCountryId, setSelectedCountryId] = useState(null);\n  const [countiesData] = useState(getCountriesData());\n  return (\n    <div className=\"worldProfits\">\n      <div className=\"worldProfits_wrapper\">\n        <Map\n          data={countiesData}\n          onSelectedCountryIdChange={setSelectedCountryId}\n        />\n      </div>\n      <Modal open={Boolean(selectedCountryId)} onClose={() => setSelectedCountryId(null)} center>\n        <CountryInfo\n          countryId={selectedCountryId}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}