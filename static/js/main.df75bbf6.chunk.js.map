{"version":3,"sources":["logo.svg","components/BarChart/index.js","components/Map/index.js","components/CountryInfo/index.js","App.js","reportWebVitals.js","index.js"],"names":["BarChart","scaleColor","d3","scaleHeight","scaleWidth","padding","this","updateChart","updateScales","props","data","height","width","animDuration","bars","viz","selectAll","d","item","exit","transition","duration","attr","style","remove","enter","append","merge","count","bandwidth","domain","length","map","range","ref","React","Component","defaultProps","Map","ready","countriesData","population","populationById","forEach","id","default","features","g","svg","on","event","stopPropagation","onSelectedCountryIdChange","path","color","zoom","scaleExtent","transform","k","call","datum","topojson","a","b","margin","top","right","bottom","left","projection","scale","translate","worldCountries","node","CountryInfo","countryId","useState","worldProfits","getCountryProfitData","countryInfo","find","properties","name","getCountryName","countryName","className","countiesData","App","selectedCountryId","setSelectedCountryId","open","Boolean","onClose","center","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df75bbf6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\n\nclass BarChart extends React.Component {\n\n  scaleColor = d3.scaleSequential(d3.interpolateViridis);\n  scaleHeight = d3.scaleLinear();\n  scaleWidth = d3.scaleBand().padding(0.1);\n\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  componentDidUpdate() {\n    this.updateChart();\n  }\n\n  updateChart() {\n    this.updateScales();\n    const { data, width, height, animDuration } = this.props;\n    const bars = d3.select(this.viz)\n      .selectAll(\".bar\")\n      .data(data, function key(d) { return d.item });\n\n    bars.exit()\n      .transition().duration(animDuration)\n      .attr(\"y\", height)\n      .attr(\"height\", 0)\n      .style(\"fill-opacity\", 0)\n      .remove();\n\n    bars.enter()\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", height)\n      .attr(\"rx\", 5 ).attr(\"ry\", 5 )\n      .merge(bars)\n      .transition().duration(animDuration)\n      .attr(\"y\", (d) => ( this.scaleHeight(d.count) ))\n      .attr(\"height\", (d) => (height - this.scaleHeight(d.count)) )\n      .attr(\"x\", (d) => ( this.scaleWidth(d.item) ) )\n      .attr(\"width\", this.scaleWidth.bandwidth() )\n      .style(\"fill\",  (d) => ( this.scaleColor(d.item) ));\n  }\n\n  updateScales() {\n    const { data, width, height } = this.props;\n    this.scaleColor.domain([0, data.length]);\n    this.scaleWidth\n      .domain(data.map((d) => (d.item)))\n      .range([0, width]);\n    this.scaleHeight\n      .domain(d3.extent(data, (d) => (d.count)))\n      .range([height - 20, 0]);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <svg ref={ viz => (this.viz = viz) }\n           width={width} height={height} >\n      </svg>\n    );\n  }\n}\n\nBarChart.defaultProps = {\n  animDuration: 600\n};\n\nBarChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  animDuration: PropTypes.number\n};\n\nexport default BarChart;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson\";\nimport * as worldCountries from './data/world_countries.json';\n\nclass Map extends React.Component {\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  async updateChart() {\n    //this.updateScales();\n    const { data, onSelectedCountryIdChange } = this.props;\n\n    const format = d3.format(',');\n\n    const margin = {top: 0, right: 0, bottom: 0, left: 0};\n    const width = 1000 - margin.left - margin.right;\n    const height = 700 - margin.top - margin.bottom;\n\n    const color = d3.scaleThreshold()\n      .domain([\n        10000,\n        100000,\n        500000,\n        1000000,\n        5000000,\n        10000000,\n        50000000,\n        100000000,\n        500000000,\n        1500000000\n      ])\n      .range([\n        'rgb(247,251,255)',\n        'rgb(222,235,247)',\n        'rgb(198,219,239)',\n        'rgb(158,202,225)',\n        'rgb(107,174,214)',\n        'rgb(66,146,198)',\n        'rgb(33,113,181)',\n        'rgb(8,81,156)',\n        'rgb(8,48,107)',\n        'rgb(3,19,43)'\n      ]);\n\n    const svg = d3.select(this.viz)\n      .attr('width', width)\n      .attr('height', height)\n      .append('g')\n      .attr('class', 'map');\n\n    const projection = d3.geoMercator()\n      .scale(150)\n      .translate( [width / 2, height / 1.5]);\n\n    const path = d3.geoPath().projection(projection);\n    ready(worldCountries, data)\n\n    function ready(countriesData, population) {\n      const populationById = {};\n      population.forEach(d => {\n        populationById[d.id] = +d.population;\n      });\n      countriesData.default.features.forEach(d => {\n        d.population = populationById[d.id]\n      });\n\n      function clicked(event, data, item) {\n        event.stopPropagation();\n        onSelectedCountryIdChange(data.id);\n      }\n\n      const g = svg.append(\"g\");\n\n      g.append('g')\n        .attr('class', 'countries')\n        .selectAll('path')\n        .data(countriesData.default.features)\n        .enter().append('path')\n        .on(\"click\", clicked)\n        .attr('d', path)\n        .style('fill', d => color(populationById[d.id]))\n        .style('stroke', 'white')\n        .style('opacity', 0.8)\n        .style('stroke-width', 0.3)\n        .on('mouseover', function (d) {\n          d3.select(this)\n            .style('opacity', 1)\n            .style('stroke-width', 1);\n        })\n        .on('mouseout', function (d) {\n          d3.select(this)\n            .style('opacity', 0.8)\n            .style('stroke-width', 0.3);\n        });\n\n      const zoom = d3.zoom()\n        .scaleExtent([1, 8])\n        .on(\"zoom\", zoomed);\n\n      function zoomed(event) {\n        const {transform} = event;\n        g.attr(\"transform\", transform);\n        g.attr(\"stroke-width\", 1 / transform.k);\n      }\n\n      svg.call(zoom);\n\n      svg.append('path')\n        .datum(topojson.mesh(countriesData.default, (a, b) => a.id !== b.id))\n        .attr('class', 'names')\n        .attr('d', path);\n    }\n\n    return svg.node()\n  }\n\n  updateScales() {\n    const { data, width, height } = this.props;\n    this.scaleColor.domain([0, data.length]);\n    this.scaleWidth\n      .domain(data.map((d) => (d.item)))\n      .range([0, width]);\n    this.scaleHeight\n      .domain(d3.extent(data, (d) => (d.count)))\n      .range([height - 20, 0]);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <svg ref={ viz => (this.viz = viz) }\n           width={width} height={height} >\n      </svg>\n    );\n  }\n}\n\nMap.defaultProps = {\n  animDuration: 600\n};\n\nMap.propTypes = {\n  animDuration: PropTypes.number,\n  data: PropTypes.array.isRequired,\n  onSelectedCountryIdChange: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\n\nexport default Map;","import React, { useState } from 'react';\nimport * as worldProfits from './data/worldProfits.json';\nimport * as worldCountries from '../Map/data/world_countries.json';\nimport './styles.css';\n\nconst getCountryProfitData = (countryId) => {\n  return worldProfits.default[countryId];\n};\nconst getCountryName = (countryId) => {\n  const countryInfo = worldCountries.default.features.find((item) => item.id === countryId);\n  return countryInfo\n    ? countryInfo.properties.name\n    : null;\n}\n\nexport const CountryInfo = ({\n  countryId\n}) => {\n  const [countryProfitData, setcountryProfitData] = useState(getCountryProfitData(countryId));\n  const [countryName, setCountryName] = useState(getCountryName(countryId));\n  return (\n    <div className=\"countryInfo\">\n      <div className='countryInfo_header'>\n        {countryName}\n      </div>\n    </div>\n)};\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './components/BarChart';\nimport BarChart from './components/BarChart';\nimport Map from './components/Map';\nimport {CountryInfo} from './components/CountryInfo';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\n\nconst countiesData = [\n  {id: \"CHN\",\tname: \"China\", \"population\": \"1330141295\"},\n  {id: \"IND\",\tname: \"India\", \"population\": \"1173108018\"},\n  {id: \"USA\",\tname: \"United States\", \"population\": \"310232863\"},\n  {id: \"IDN\",\tname: \"Indonesia\", \"population\": \"242968342\"},\n  {id: \"BRA\",\tname: \"Brazil\", \"population\": \"201103330\"},\n  {id: \"PAK\",\tname: \"Pakistan\", \"population\": \"177276594\"},\n  {id: \"BGD\",\tname: \"Bangladesh\", \"population\": \"158065841\"},\n  {id: \"NGA\",\tname: \"Nigeria\", \"population\": \"152217341\"},\n  {id: \"RUS\",\tname: \"Russia\", \"population\": \"139390205\"},\n  {id: \"JPN\",\tname: \"Japan\", \"population\": \"126804433\"},\n  {id: \"MEX\",\tname: \"Mexico\", \"population\": \"112468855\"},\n  {id: \"PHL\",\tname: \"Philippines\", \"population\": \"99900177\"},\n  {id: \"VNM\",\tname: \"Vietnam\", \"population\": \"89571130\"},\n  {id: \"ETH\",\tname: \"Ethiopia\", \"population\": \"88013491\"},\n  {id: \"DEU\",\tname: \"Germany\", \"population\": \"82282988\"},\n  {id: \"EGY\",\tname: \"Egypt\", \"population\": \"80471869\"},\n  {id: \"TUR\",\tname: \"Turkey\", \"population\": \"77804122\"},\n  {id: \"COD\",\tname: \"Congo, Democratic Republic of the\", \"population\": \"70916439\"},\n  {id: \"IRN\",\tname: \"Iran\", \"population\": \"67037517\"},\n  {id: \"THA\",\tname: \"Thailand\", \"population\": \"66404688\"},\n  {id: \"FRA\",\tname: \"France\", \"population\": \"64057792\"},\n  {id: \"GBR\",\tname: \"United Kingdom\", \"population\": \"61284806\"},\n  {id: \"ITA\",\tname: \"Italy\", \"population\": \"58090681\"}\n];\n\nfunction App() {\n  const [selectedCountryId, setSelectedCountryId] = useState(null);\n  return (\n    <div className=\"worldProfits\">\n      <div className=\"worldProfits_wrapper\">\n        <Map\n          data={countiesData}\n          onSelectedCountryIdChange={setSelectedCountryId}\n        />\n      </div>\n      <Modal open={Boolean(selectedCountryId)} onClose={() => setSelectedCountryId(null)} center>\n        <CountryInfo\n          countryId={selectedCountryId}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}