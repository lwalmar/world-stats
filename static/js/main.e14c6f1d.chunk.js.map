{"version":3,"sources":["logo.svg","modules/Period.js","components/Map/index.js","modules/map-tip.js","components/StackChart/index.js","components/StackChartLegend/index.js","components/CountryInfo/index.js","App.js","reportWebVitals.js","index.js"],"names":["Period","year","periodScope","periodType","this","_stringRepr","_year","_periodScope","_periodType","fromStringRepr","stringRepr","split","Map","updateChart","prevProps","props","width","height","tip","direction","offset","html","node","initNode","svg","point","target","vis","element","svgNode","tagName","toLowerCase","ownerSVGElement","getSVGNode","createSVGPoint","document","body","appendChild","show","args","Array","prototype","slice","call","arguments","length","SVGElement","pop","coords","content","apply","poffset","dir","nodel","getNodeEl","i","directions","scrollTop","documentElement","scrollLeft","style","classed","directionCallbacks","top","left","hide","attr","n","v","d3","functor","destroy","remove","d","event","bbox","getScreenBBox","y","offsetHeight","x","offsetWidth","s","e","w","nw","ne","sw","se","Object","keys","div","createElement","targetel","getScreenCTM","parentNode","matrix","tbbox","getBBox","matrixTransform","getMapTip","properties","name","Math","round","profits","period","toString","getTip","onSelectedCountryIdChange","profitsData","data","margin","color","domain","range","projection","d3geo","scale","rotate","translate","path","zoom","scaleExtent","on","console","log","transform","g","k","viz","append","profitsDataById","forEach","id","worldCountries","features","selectAll","enter","stopPropagation","datum","topojson","a","b","ref","React","Component","defaultProps","animDuration","formatPeriod","barStack","seriesData","l","posBase","negBase","size","abs","y0","extent","map","f","StackChart","scaleHeight","scaleWidth","padding","stackData","updateScales","series","tooltip","exit","transition","duration","bandwidth","value","xPosition","yPosition","title","getBoundingClientRect","xAxis","tickValues","filter","ceil","tickFormat","yAxis","tickSize","dividingLine","drawLine","lineData","line","className","StackChartLegend","legendMap","legendKey","type","background","PROFITS_BREAKDOWN_UI_DATA","dividendsAndBuybacks","netDebtOfHouseholdsAndNISH","netDebtOfGeneralGovernment","fixedAssetsOfDomesticBusiness","currentAccount","otherFactors","discrepancies","CountryInfo","countryId","useState","countryProfitsData","worldProfits","prop","countryProfitData","getProfitsBreakdownData","profitsBreakdownData","getProfitsData","countryInfo","find","item","getCountryName","countryName","setHeight","setWidth","useRef","useEffect","current","clientHeight","clientWidth","App","selectedCountryId","setSelectedCountryId","profitsList","countiesProfits","open","Boolean","onClose","center","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e14c6f1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import lodash from 'lodash';\n\nclass Period {\n  static fromStringRepr = (stringRepr) => {\n    const [year, periodScope] = stringRepr.split('-');\n    const periodType = periodScope.split('')[0];\n\n    return new Period(year, periodScope, periodType);\n  }\n\n  constructor (year, periodScope, periodType) {\n    this._stringRepr = `${year}-${periodScope}`;\n    this._year = year;\n    this._periodScope = periodScope;\n    this._periodType = periodType === 'Y'\n      ? 'Year'\n      : periodType;\n  }\n\n  get year () {\n    return this._year;\n  }\n\n  get stringRepr () {\n    return this._stringRepr;\n  }\n\n  get periodScope () {\n    return this._periodScope;\n  }\n\n  get periodType () {\n    return this._periodType;\n  }\n\n  toString () {\n    if (this._periodType === 'Year') {\n      return this._year;\n    }\n    return `${this._year} ${this._periodScope}`\n  }\n}\n\nexport default Period;\n","import React from \"react\";\nimport Period from \"../../modules/Period\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport * as d3geo from \"d3-geo-projection\";\nimport {getMapTip} from \"../../modules/map-tip.js\";\nimport * as topojson from \"topojson\";\nimport * as worldCountries from './data/world_countries.json';\nimport './styles.css';\n\nconst formatPeriod = (stringRepr) => {\n  if (stringRepr) {\n    return Period.fromStringRepr(stringRepr).toString()\n  }\n  return stringRepr;\n};\n\nclass Map extends React.Component {\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  componentDidUpdate (prevProps) {\n    if (this.props.width !== prevProps.width || this.props.height !== prevProps.height) {\n      this.updateChart();\n    }\n  }\n\n  getTip () {\n    // Set tooltips\n    const tip = getMapTip()\n      .attr('class', 'mapTooltip')\n      .offset([-10, 0])\n      .html(\n        d => {\n          return `<strong>Country: </strong><span class='mapTooltip_details'>${d.properties.name}</span><br>\n          <strong>Profits: </strong><span class='mapTooltip_details'>${Math.round(d.profits)} $bln</span><br>\n          <strong>Period: </strong><span class='mapTooltip_details'>${formatPeriod(d.period)}</span><br>\n          `\n        })\n\n    tip.direction((d) => {\n      if (d.properties.name === 'Antarctica') return 'n'\n      // Americas\n      if (d.properties.name === 'Greenland') return 's'\n      if (d.properties.name === 'Canada') return 'e'\n      if (d.properties.name === 'USA') return 'e'\n      if (d.properties.name === 'Mexico') return 'e'\n      // Europe\n      if (d.properties.name === 'Iceland') return 's'\n      if (d.properties.name === 'Norway') return 's'\n      if (d.properties.name === 'Sweden') return 's'\n      if (d.properties.name === 'Finland') return 's'\n      if (d.properties.name === 'Russia') return 's'\n      // Asia\n      if (d.properties.name === 'China') return 'w'\n      if (d.properties.name === 'Japan') return 's'\n      // Oceania\n      if (d.properties.name === 'Indonesia') return 'w'\n      if (d.properties.name === 'Papua New Guinea') return 'w'\n      if (d.properties.name === 'Australia') return 'w'\n      if (d.properties.name === 'New Zealand') return 'w'\n      // otherwise if not specified\n      return 'n'\n    })\n\n    tip.offset((d) => {\n      // [top, left]\n      if (d.properties.name === 'Antarctica') return [0, 0]\n      // Americas\n      if (d.properties.name === 'Greenland') return [10, -10]\n      if (d.properties.name === 'Canada') return [24, -28]\n      if (d.properties.name === 'USA') return [-5, 8]\n      if (d.properties.name === 'Mexico') return [12, 10]\n      if (d.properties.name === 'Chile') return [0, -15]\n      // Europe\n      if (d.properties.name === 'Iceland') return [15, 0]\n      if (d.properties.name === 'Norway') return [10, -28]\n      if (d.properties.name === 'Sweden') return [10, -8]\n      if (d.properties.name === 'Finland') return [10, 0]\n      if (d.properties.name === 'France') return [-9, 66]\n      if (d.properties.name === 'Italy') return [-8, -6]\n      if (d.properties.name === 'Russia') return [-30, -10]\n      // Africa\n      if (d.properties.name === 'Madagascar') return [-10, 10]\n      // Asia\n      if (d.properties.name === 'China') return [-16, -8]\n      if (d.properties.name === 'Mongolia') return [-5, 0]\n      if (d.properties.name === 'Pakistan') return [-10, 13]\n      if (d.properties.name === 'India') return [-11, -18]\n      if (d.properties.name === 'Nepal') return [-8, 1]\n      if (d.properties.name === 'Myanmar') return [-12, 0]\n      if (d.properties.name === 'Laos') return [-12, -8]\n      if (d.properties.name === 'Vietnam') return [-12, -4]\n      if (d.properties.name === 'Japan') return [5, 5]\n      // Oceania\n      if (d.properties.name === 'Indonesia') return [0, -5]\n      if (d.properties.name === 'Papua New Guinea') return [-5, -10]\n      if (d.properties.name === 'Australia') return [-15, 0]\n      if (d.properties.name === 'New Zealand') return [-15, 0]\n      // otherwise if not specified\n      return [-10, 0]\n    })\n\n    return tip;\n  }\n\n  updateChart() {\n    if (this.props.width === 0 || this.props.height === 0) {\n      return;\n    }\n    const tip = this.getTip();\n    const { onSelectedCountryIdChange } = this.props;\n    const profitsData = this.props.data;\n\n    const margin = {top: 0, right: 0, bottom: 0, left: 0};\n    const width = this.props.width - margin.left - margin.right;\n    const height = this.props.height - margin.top - margin.bottom;\n\n    const color = d3.scaleThreshold()\n      .domain([\n        0,\n        50,\n        100,\n        150,\n        200,\n        250,\n        300,\n        350,\n        400,\n        450\n      ])\n      .range([\n        'rgb(158,202,225)',\n        'rgb(107,174,214)',\n        'rgb(88,140,206)',\n        'rgb(66,146,198)',\n        'rgb(33,113,181)',\n        'rgb(15,91,171)',\n        'rgb(8,81,156)',\n        'rgb(8,48,107)',\n        'rgb(3,19,43)',\n        'rgb(3,19,43)'\n      ]);\n\n    const projection = d3geo.geoRobinson()\n      .scale(220)\n      .rotate([349, 0, 0])\n      .translate( [width / 2, height / 1.8]);\n\n    const path = d3.geoPath().projection(projection);\n    const zoom = d3.zoom()\n      .scaleExtent([1, 8])\n      .on(\"zoom\", zoomed);\n\n    const svg = d3.select(this.viz)\n      .attr('width', width)\n      .attr('height', height)\n      .call(zoom)\n      .append('g')\n      .attr('class', 'map');\n\n    const g = svg.append(\"g\");\n\n    function clicked(event, data) {\n      event.stopPropagation();\n      if (data.profits) {\n        onSelectedCountryIdChange(data.id);\n      }\n    }\n\n    const profitsDataById = {};\n    profitsData.forEach(d => {\n      profitsDataById[d.id] = d;\n    });\n    worldCountries.default.features.forEach(d => {\n      d.profits = +profitsDataById[d.id]?.profits;\n      d.period = profitsDataById[d.id]?.period;\n    });\n\n    function zoomed (event) {\n      console.log('zoomed')\n      const {transform} = event;\n      g.attr(\"transform\", transform);\n      g.attr(\"stroke-width\", 1 / transform.k);\n    }\n    svg.call(tip)\n\n    g.append('g')\n      .attr('class', 'countries')\n      .selectAll('path')\n      .data(worldCountries.default.features)\n      .enter().append('path')\n      .on(\"click\", clicked)\n      .attr('d', path)\n      .style('fill', d => color(profitsDataById[d.id]?.profits))\n      .style('stroke', 'white')\n      .style('opacity', 0.8)\n      .style('stroke-width', 0.3)\n      // tooltips\n      .on('mouseover', function(event, d) {\n        if (d.profits) {\n          tip.show(d, event)\n          d3.select(this)\n            .style('cursor', \"pointer\")\n            .style('opacity', 1)\n            .style('stroke-width', 1)\n        }\n      })\n      .on('mouseout', function(event, d) {\n        tip.hide(d, event)\n        d3.select(this)\n          .style('opacity', 0.8)\n          .style('stroke-width', 0.3)\n      })\n\n    svg.append('path')\n      .datum(topojson.mesh(worldCountries.default, (a, b) => a.id !== b.id))\n      .attr('class', 'names')\n      .attr('d', path);\n\n    return svg.node()\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <svg ref={ viz => (this.viz = viz) }\n           width={width} height={height} >\n      </svg>\n    );\n  }\n}\n\nMap.defaultProps = {\n  animDuration: 600\n};\n\nMap.propTypes = {\n  animDuration: PropTypes.number,\n  data: PropTypes.array.isRequired,\n  onSelectedCountryIdChange: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\n\nexport default Map;","import * as d3 from \"d3\";\n// eslint-disable-next-line no-extra-semi\nexport const getMapTip = () => {\n  var direction = d3TipDirection,\n    offset    = d3TipOffset,\n    html      = d3TipHTML,\n    node      = initNode(),\n    svg       = null,\n    point     = null,\n    target    = null\n\n  function tip(vis) {\n    svg = getSVGNode(vis)\n    if (!svg) return\n    point = svg.createSVGPoint()\n    document.body.appendChild(node)\n  }\n\n  // Public - show the tooltip on the screen\n  //\n  // Returns a tip\n  tip.show = function() {\n    var args = Array.prototype.slice.call(arguments)\n    if (args[args.length - 1] instanceof SVGElement) target = args.pop()\n\n    var content = html.apply(this, args),\n      poffset = offset.apply(this, args),\n      dir     = direction.apply(this, args),\n      nodel   = getNodeEl(),\n      i       = directions.length,\n      coords,\n      scrollTop  = document.documentElement.scrollTop ||\n        document.body.scrollTop,\n      scrollLeft = document.documentElement.scrollLeft ||\n        document.body.scrollLeft\n\n    nodel.html(content)\n      .style('opacity', 1).style('pointer-events', 'all')\n\n    while (i--) nodel.classed(directions[i], false)\n    coords = directionCallbacks[dir].apply(this, args)\n    nodel.classed(dir, true)\n      .style('top', (coords.top + poffset[0]) + scrollTop + 'px')\n      .style('left', (coords.left + poffset[1]) + scrollLeft + 'px')\n\n    return tip\n  }\n\n  // Public - hide the tooltip\n  //\n  // Returns a tip\n  tip.hide = function() {\n    var nodel = getNodeEl()\n    nodel.style('opacity', 0).style('pointer-events', 'none')\n    return tip\n  }\n\n  // Public: Proxy attr calls to the d3 tip container.\n  // Sets or gets attribute value.\n  //\n  // n - name of the attribute\n  // v - value of the attribute\n  //\n  // Returns tip or attribute value\n  // eslint-disable-next-line no-unused-vars\n  tip.attr = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().attr(n)\n    }\n\n    var args =  Array.prototype.slice.call(arguments)\n    d3.selection.prototype.attr.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Proxy style calls to the d3 tip container.\n  // Sets or gets a style value.\n  //\n  // n - name of the property\n  // v - value of the property\n  //\n  // Returns tip or style property value\n  // eslint-disable-next-line no-unused-vars\n  tip.style = function(n, v) {\n    if (arguments.length < 2 && typeof n === 'string') {\n      return getNodeEl().style(n)\n    }\n\n    var args = Array.prototype.slice.call(arguments)\n    d3.selection.prototype.style.apply(getNodeEl(), args)\n    return tip\n  }\n\n  // Public: Set or get the direction of the tooltip\n  //\n  // v - One of n(north), s(south), e(east), or w(west), nw(northwest),\n  //     sw(southwest), ne(northeast) or se(southeast)\n  //\n  // Returns tip or direction\n  tip.direction = function(v) {\n    if (!arguments.length) return direction\n    direction = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: Sets or gets the offset of the tip\n  //\n  // v - Array of [x, y] offset\n  //\n  // Returns offset or\n  tip.offset = function(v) {\n    if (!arguments.length) return offset\n    offset = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: sets or gets the html value of the tooltip\n  //\n  // v - String value of the tip\n  //\n  // Returns html value or tip\n  tip.html = function(v) {\n    if (!arguments.length) return html\n    html = v == null ? v : functor(v)\n\n    return tip\n  }\n\n  // Public: destroys the tooltip and removes it from the DOM\n  //\n  // Returns a tip\n  tip.destroy = function() {\n    if (node) {\n      getNodeEl().remove()\n      node = null\n    }\n    return tip\n  }\n\n  function d3TipDirection() { return 'n' }\n  function d3TipOffset() { return [0, 0] }\n  function d3TipHTML() { return ' ' }\n\n  var directionCallbacks = {\n      n:  directionNorth,\n      s:  directionSouth,\n      e:  directionEast,\n      w:  directionWest,\n      nw: directionNorthWest,\n      ne: directionNorthEast,\n      sw: directionSouthWest,\n      se: directionSouthEast\n    },\n    directions = Object.keys(directionCallbacks)\n\n  function directionNorth(d, event) {\n    var bbox = getScreenBBox(event)\n    return {\n      top:  bbox.n.y - node.offsetHeight,\n      left: bbox.n.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionSouth(d, event) {\n    var bbox = getScreenBBox(event)\n    return {\n      top:  bbox.s.y,\n      left: bbox.s.x - node.offsetWidth / 2\n    }\n  }\n\n  function directionEast(d, event) {\n    var bbox = getScreenBBox(event)\n    return {\n      top:  bbox.e.y - node.offsetHeight / 2,\n      left: bbox.e.x\n    }\n  }\n\n  function directionWest(d, event) {\n    var bbox = getScreenBBox(event)\n    return {\n      top:  bbox.w.y - node.offsetHeight / 2,\n      left: bbox.w.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthWest(d, event) {\n    var bbox = getScreenBBox(event)\n    return {\n      top:  bbox.nw.y - node.offsetHeight,\n      left: bbox.nw.x - node.offsetWidth\n    }\n  }\n\n  function directionNorthEast(d, event) {\n    var bbox = getScreenBBox(event)\n    return {\n      top:  bbox.ne.y - node.offsetHeight,\n      left: bbox.ne.x\n    }\n  }\n\n  function directionSouthWest(d, event) {\n    var bbox = getScreenBBox(event)\n    return {\n      top:  bbox.sw.y,\n      left: bbox.sw.x - node.offsetWidth\n    }\n  }\n\n  function directionSouthEast(d, event) {\n    var bbox = getScreenBBox(event)\n    return {\n      top:  bbox.se.y,\n      left: bbox.se.x\n    }\n  }\n\n  function initNode() {\n    var div = d3.select(document.createElement('div'))\n    div\n      .style('position', 'absolute')\n      .style('top', 0)\n      .style('opacity', 0)\n      .style('pointer-events', 'none')\n      .style('box-sizing', 'border-box')\n\n    return div.node()\n  }\n\n  function getSVGNode(element) {\n    var svgNode = element.node()\n    if (!svgNode) return null\n    if (svgNode.tagName.toLowerCase() === 'svg') return svgNode\n    return svgNode.ownerSVGElement\n  }\n\n  function getNodeEl() {\n    if (node == null) {\n      node = initNode()\n      // re-add node to DOM\n      document.body.appendChild(node)\n    }\n    return d3.select(node)\n  }\n\n  // Private - gets the screen coordinates of a shape\n  //\n  // Given a shape on the screen, will return an SVGPoint for the directions\n  // n(north), s(south), e(east), w(west), ne(northeast), se(southeast),\n  // nw(northwest), sw(southwest).\n  //\n  //    +-+-+\n  //    |   |\n  //    +   +\n  //    |   |\n  //    +-+-+\n  //\n  // Returns an Object {n, s, e, w, nw, sw, ne, se}\n  function getScreenBBox(event) {\n    var targetel   = target || event.target\n\n    while (targetel.getScreenCTM == null && targetel.parentNode == null) {\n      targetel = targetel.parentNode\n    }\n\n    var bbox       = {},\n      matrix     = targetel.getScreenCTM(),\n      tbbox      = targetel.getBBox(),\n      width      = tbbox.width,\n      height     = tbbox.height,\n      x          = tbbox.x,\n      y          = tbbox.y\n\n    point.x = x\n    point.y = y\n    bbox.nw = point.matrixTransform(matrix)\n    point.x += width\n    bbox.ne = point.matrixTransform(matrix)\n    point.y += height\n    bbox.se = point.matrixTransform(matrix)\n    point.x -= width\n    bbox.sw = point.matrixTransform(matrix)\n    point.y -= height / 2\n    bbox.w = point.matrixTransform(matrix)\n    point.x += width\n    bbox.e = point.matrixTransform(matrix)\n    point.x -= width / 2\n    point.y -= height / 2\n    bbox.n = point.matrixTransform(matrix)\n    point.y += height\n    bbox.s = point.matrixTransform(matrix)\n\n    return bbox\n  }\n\n  // Private - replace D3JS 3.X d3.functor() function\n  function functor(v) {\n    return typeof v === 'function' ? v : function() {\n      return v\n    }\n  }\n\n  return tip\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Period from \"../../modules/Period\";\nimport * as d3 from \"d3\";\nimport './styles.css';\n\nconst formatInt = (value) => {\n  if (value) {\n    return Math.round(value);\n  }\n  return value\n};\n\nconst formatPeriod = (stringRepr) => {\n  if (stringRepr) {\n    return Period.fromStringRepr(stringRepr).toString()\n  }\n  return stringRepr;\n};\n\nconst barStack = (seriesData) => {\n  if (seriesData.length === 0) {\n    return [];\n  }\n  var l = seriesData[0].length\n  while (l--) {\n    var posBase = 0; // positive base\n    var negBase = 0; // negative base\n\n    seriesData.forEach(function(d) {\n      d = d[l]\n      d.size = Math.abs(d.y)\n      if (d.y < 0) {\n        d.y0 = negBase\n        negBase -= d.size\n      } else\n      {\n        d.y0 = posBase = posBase + d.size\n      }\n    })\n  }\n  seriesData.extent = d3.extent(\n    d3.merge(\n      d3.merge(\n        seriesData.map(function(e) {\n          return e.map(function(f) { return [f.y0,f.y0-f.size] })\n        })\n      )\n    )\n  )\n}\n\nclass StackChart extends React.Component {\n  scaleHeight = d3.scaleLinear();\n  scaleWidth = d3.scaleBand().padding(0.1);\n\n  componentDidMount() {\n    this.updateChart();\n  }\n\n  componentDidUpdate() {\n    this.updateChart();\n  }\n\n  updateChart() {\n    const { stackData, width, height, animDuration, margin} = this.props;\n    if (width ===0 || height === 0 || stackData.length === 0) {\n      return;\n    }\n    this.updateScales();\n\n    const svg = d3.select(this.viz);\n\n    barStack(stackData);\n    const series = svg\n      .selectAll(\".series\")\n      .data(stackData);\n\n    var tooltip = d3.select(\".stackChart_tooltip\")\n      .style(\"visibility\", \"hidden\");\n\n\n    series.exit()\n      .transition().duration(animDuration)\n      .attr(\"y\", height)\n      .attr(\"height\", 0)\n      .style(\"fill-opacity\", 0)\n      .remove();\n\n    series.enter()\n      .append(\"g\")\n      .classed(\"series\",true)\n      .style(\"fill\", (d) => d[0].color)\n      .selectAll(\"rect\").data(Object)\n      .enter().append(\"rect\")\n      .attr(\"x\", (d, i) => this.scaleWidth(d.x))\n      .attr(\"y\", (d) => this.scaleHeight(d.y0))\n      .attr(\"height\", (d) => (this.scaleHeight(0) - this.scaleHeight(d.size)))\n      .attr(\"width\", this.scaleWidth.bandwidth())\n      .on(\"mouseout\", function() {\n        d3.select(this).style('opacity', 1)\n        tooltip.style(\"visibility\", \"hidden\");\n      })\n      .on(\"mousemove\", function(event, d) {\n        const [x, y] = d3.pointer(event);\n        const xPosition = x;\n        const yPosition = y + 20;\n        d3.select(this)\n          .style('cursor', \"pointer\")\n          .style('opacity', 0.7)\n        tooltip\n          .html(`<strong>${d.title}: </strong><span class='stackChart_details'>${formatInt(d.y)} $bln</span>`)\n          .style(\"top\", (yPosition) + \"px\")\n        if (x > width/2) {\n          tooltip\n            .style(\"left\", (xPosition - tooltip.node().getBoundingClientRect().width) + \"px\")\n        } else {\n          tooltip\n            .style(\"left\", (xPosition) + \"px\")\n        }\n        tooltip.style(\"visibility\", \"visible\")\n      });\n\n    var xAxis = d3.axisBottom()\n      .scale(this.scaleWidth)\n      .tickValues(this.scaleWidth.domain().filter((d,i) => {\n        const domain = this.scaleWidth.domain();\n        const MAX_TICKS = 20;\n        if (domain.length > MAX_TICKS) {\n          return !(i%Math.ceil(domain.length/MAX_TICKS))\n        }\n        return true\n      }))\n      .tickFormat(formatPeriod);\n\n    var yAxis = d3.axisLeft()\n      .scale(this.scaleHeight)\n      .tickSize(6, 0);\n\n    svg.append(\"g\").attr(\"class\",\"axis x\").attr(\"transform\",\"translate (0 \"+(height - margin)+\")\").call(xAxis)\n    svg.append(\"g\").attr(\"class\",\"axis y\").attr(\"transform\",\"translate (\"+margin+\" 0)\").call(yAxis)\n    const dividingLine = d3.line();\n    svg.append(\"path\").attr(\"class\",\"stackChart_dividingLine\").attr(\"d\", dividingLine(\n      [\n        [margin+1, this.scaleHeight(0)],\n        [width, this.scaleHeight(0)]\n      ]\n    ))\n\n    this.drawLine(svg);\n  }\n\n  drawLine (svg) {\n    const {lineData} = this.props;\n    const line = d3.line()\n      .x((d) => this.scaleWidth(d.x) + this.scaleWidth.bandwidth()/2)\n      .y((d) => this.scaleHeight(d.y));\n\n    svg.append(\"path\")\n      .datum(lineData)\n      .attr(\"class\", \"stackChart_line\")\n      .attr(\"d\", line);\n  }\n\n  updateScales() {\n    const { stackData, width, height, margin } = this.props;\n    if (stackData.length === 0) {\n      return;\n    }\n    this.scaleWidth\n      .domain(stackData[0].map((d) => d.x))\n      .range([margin, width - margin]);\n\n    barStack(stackData);\n    this.scaleHeight\n      .domain(stackData.extent)\n      .range([ height - margin,0 + margin]);\n  }\n\n  render() {\n    const { width, height } = this.props;\n    return (\n      <div className=\"stackChart\">\n        <svg ref={ viz => (this.viz = viz) }\n             width={width} height={height} >\n        </svg>\n        <div className=\"stackChart_tooltip\"></div>\n      </div>\n    );\n  }\n}\n\nStackChart.propTypes = {\n  animDuration: PropTypes.number,\n  margin: PropTypes.number,\n  lineData: PropTypes.array.isRequired,\n  height: PropTypes.number.isRequired,\n  stackData: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired\n};\n\nStackChart.defaultProps = {\n  animDuration: 600,\n  margin: 0\n};\n\nexport default StackChart;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport * as d3 from \"d3\";\nimport './styles.css';\n\nconst StackChartLegend = ({\n  legendMap\n}) => {\n  return (<div className='stackChartLegend'>\n    {\n      Object.keys(legendMap).map((legendKey) => (\n        <div\n          className='stackChartLegend_item'\n          key={legendKey}\n        >\n          <div className={`stackChartLegend_${legendMap[legendKey].type}`} style={{background: legendMap[legendKey].color}}></div>\n          <div className='stackChartLegend_title'>{legendMap[legendKey].title}</div>\n        </div>\n      ))\n    }\n  </div>)\n};\n\nStackChartLegend.propTypes = {\n  legendMap: PropTypes.shape({}).isRequired\n};\n\n\nexport default StackChartLegend;","import React, { useState, useEffect, useRef } from 'react';\nimport * as worldProfits from './data/worldProfits.json';\nimport * as worldCountries from '../Map/data/world_countries.json';\nimport StackChart from '../StackChart';\nimport StackChartLegend from '../StackChartLegend';\nimport * as d3 from \"d3\";\nimport './styles.css';\n\nconst PROFITS_BREAKDOWN_UI_DATA = {\n  dividendsAndBuybacks: {\n    title: 'Dividends and Buybacks',\n    type: 'stack',\n    color: '#0C3B4E'\n  },\n  netDebtOfHouseholdsAndNISH: {\n    title: 'Δ Net debt of Households and NISH',\n    type: 'stack',\n    color: '#D02428'\n  },\n  netDebtOfGeneralGovernment: {\n    title: 'Δ Net debt of General Government',\n    type: 'stack',\n    color: '#176C76'\n  },\n  fixedAssetsOfDomesticBusiness: {\n    title: 'Δ Fixed Assets of Domestic Business',\n    type: 'stack',\n    color: '#3EA45E'\n  },\n  currentAccount: {\n    title: 'Current Account',\n    type: 'stack',\n    color: '#5F7658'\n  },\n  otherFactors: {\n    title: 'Other factors',\n    type: 'stack',\n    color: '#FEBD46'\n  },\n  discrepancies: {\n    title: 'Discrepancies',\n    type: 'stack',\n    color: '#B1B1B1'\n  },\n  profits: {\n    title: 'Profit After Taxes [CP_D]',\n    type: 'line',\n    color: '#000000'\n  }\n};\n\nconst getProfitsBreakdownData = (countryId) => {\n  const countryProfitsData = worldProfits.default[countryId];\n\n  return countryProfitsData\n    ? [\n      'dividendsAndBuybacks',\n      'netDebtOfHouseholdsAndNISH',\n      'netDebtOfGeneralGovernment',\n      'fixedAssetsOfDomesticBusiness',\n      'currentAccount',\n      'otherFactors',\n      'discrepancies'\n    ].map((prop) => countryProfitsData.map((countryProfitData) => ({\n      x: countryProfitData.period,\n      y: countryProfitData.data[prop],\n      color: PROFITS_BREAKDOWN_UI_DATA[prop].color,\n      title: PROFITS_BREAKDOWN_UI_DATA[prop].title})\n    ))\n    : [];\n};\nconst getProfitsData = (countryId) => {\n  const countryProfitsData = worldProfits.default[countryId];\n\n  return countryProfitsData\n    ? countryProfitsData.map((countryProfitData) => ({x: countryProfitData.period, y: countryProfitData.data.profits}))\n    : [];\n};\n\nconst getCountryName = (countryId) => {\n  const countryInfo = worldCountries.default.features.find((item) => item.id === countryId);\n  return countryInfo\n    ? countryInfo.properties.name\n    : null;\n}\n\nexport const CountryInfo = ({\n  countryId\n}) => {\n  const [profitsBreakdownData, setProfitsBreakdownData] = useState(getProfitsBreakdownData(countryId));\n  const [profitsData, setProfitsData] = useState(getProfitsData(countryId));\n  const [countryName, setCountryName] = useState(getCountryName(countryId));\n  const [height, setHeight] = useState(0)\n  const [width, setWidth] = useState(0)\n  const ref = useRef(null)\n\n  useEffect(() => {\n    setHeight(ref.current.clientHeight)\n    setWidth(ref.current.clientWidth)\n  }, [countryId])\n\n  return (\n    <div className=\"countryInfo\">\n      <div className='countryInfo_title'>\n        {countryName}\n      </div>\n      <div className='countryInfo_subtitle'>\n        {'Profits after Taxes, $bln/year'}\n      </div>\n      <div className='countryInfo_chart'>\n        <div\n          className='countryInfoChart_canvas'\n          ref={ref}\n        >\n          <StackChart\n            lineData={profitsData}\n            margin={40}\n            height={height}\n            stackData={profitsBreakdownData}\n            width={width}\n          />\n        </div>\n        {profitsBreakdownData.length && (\n          <div className='countryInfo_legend'>\n            <StackChartLegend\n              legendMap={PROFITS_BREAKDOWN_UI_DATA}\n            />\n          </div>\n        )}\n      </div>\n    </div>\n)};\n","import React, { useState, useEffect, useRef } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Map from './components/Map';\nimport {CountryInfo} from './components/CountryInfo';\nimport * as worldProfits from './components/CountryInfo/data/worldProfits.json';\nimport 'react-responsive-modal/styles.css';\nimport { Modal } from 'react-responsive-modal';\n\nconst getCountriesProfitsData = () =>\n  Object.keys(worldProfits.default).map((countryId) => {\n    const profitsList = worldProfits.default[countryId];\n    return ({\n      id: countryId,\n      profits: profitsList[profitsList.length - 1].data.profits,\n      period: profitsList[profitsList.length - 1].period\n    })\n});\n\nfunction App() {\n  const [selectedCountryId, setSelectedCountryId] = useState(null);\n  const [countiesProfits] = useState(getCountriesProfitsData());\n  const [height, setHeight] = useState(0)\n  const [width, setWidth] = useState(0)\n  const ref = useRef(null)\n\n  useEffect(() => {\n    setHeight(ref.current.clientHeight)\n    setWidth(ref.current.clientWidth)\n  }, [])\n\n  return (\n    <div className=\"worldProfits\">\n      <div className=\"worldProfits_title\">{'Profits Atlas'}</div>\n      <div\n        className=\"worldProfits_wrapper\"\n        ref={ref}\n      >\n        <Map\n          data={countiesProfits}\n          height={height}\n          onSelectedCountryIdChange={setSelectedCountryId}\n          width={width}\n        />\n      </div>\n      <Modal open={Boolean(selectedCountryId)} onClose={() => setSelectedCountryId(null)} center>\n        <CountryInfo\n          countryId={selectedCountryId}\n        />\n      </Modal>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}